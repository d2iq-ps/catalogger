"""
Script:     Catalogger App
Developer:  Dave Whitehouse - D2IQ Solutions Architect
Contact:    @dwhitehouse
Date:       7 Oct 22
Summary:    A class that defines a connection to Github based on repo username and a token
"""

from github import Github
from flask import session, request, redirect, url_for

class GithubRepo:
    def __init__(self, username, token, repo_name):
        self.token = token
        self.username = username
        self.repo_name = repo_name
        self.commit_message = "Initial Commit - Generated by catalogger application"
        
    def check_creds(self):
        try:
            self.g = Github(self.token)
            self.user = self.g.get_user(self.username)
            self.user.get_repos()
            return True
        except Exception as e:
            return False
    
    def get_repos(self):
        try:
            self.repos = self.user.get_repos()
            return self.repos
        except:
            return False
            
    def create_repo(self):
        try:
            self.repo = self.user.create_repo(self.repo_name)
            return True
        except:
            return False

    def push(self):
        try:
            self.repo.index.commit(self.commit_message)
            return True
        except Exception as e:
            return False


def connect_github():
    github_vars={"gh_username": "", "gh_token": "", "gh_repo": ""}
    for key, value in request.form.items():
        github_vars[key]=value
    c = GithubRepo(github_vars['gh_username'], github_vars['gh_token'], github_vars['gh_repo'])
    if c.check_creds():
        print("Connected to Github")
        session['gh_form_state'] = "disabled"
        session['gh_connected'] = "text-success"
        session['gh_status_message']  = f"Connected to {github_vars['gh_username']}"
        session['gh_status_colour'] = "text-success"
        return redirect(url_for('main'))
    else:
        session['gh_form_state'] = ""
        session['gh_connected'] = "text-grey"
        session['gh_status_message']  = f"Not Connected to a repo"
        session['gh_status_colour'] = "text-danger"
        print("Failed to connect to Github")